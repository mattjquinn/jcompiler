initSidebarItems({"enum":[["LLVMOrcErrorCode",""],["LLVMOrcOpaqueJITStack",""]],"fn":[["LLVMOrcAddEagerlyCompiledIR","Add a module to be eagerly compiled."],["LLVMOrcAddLazilyCompiledIR","Add a module to be lazily compiled one function at a time."],["LLVMOrcAddObjectFile","Add an object file."],["LLVMOrcCreateIndirectStub","Create a named indirect call stub."],["LLVMOrcCreateInstance","Create an ORC JIT stack."],["LLVMOrcCreateLazyCompileCallback","Create a lazy compile callback."],["LLVMOrcDisposeInstance","Dispose of an ORC JIT stack."],["LLVMOrcDisposeMangledSymbol","Dispose of a mangled symbol."],["LLVMOrcGetErrorMsg","Get the error message for the most recent error (if any)."],["LLVMOrcGetMangledSymbol","Mangle the given symbol."],["LLVMOrcGetSymbolAddress","Get symbol address from JIT instance."],["LLVMOrcGetSymbolAddressIn","Get symbol address from JIT instance, searching only the specified handle."],["LLVMOrcRegisterJITEventListener","Register a JIT Event Listener."],["LLVMOrcRemoveModule","Remove a module set from the JIT."],["LLVMOrcSetIndirectStubPointer","Set the pointer for the given indirect stub."],["LLVMOrcUnregisterJITEventListener","Unegister a JIT Event Listener."]],"type":[["LLVMOrcJITStackRef",""],["LLVMOrcLazyCompileCallbackFn",""],["LLVMOrcModuleHandle",""],["LLVMOrcSymbolResolverFn",""],["LLVMOrcTargetAddress",""]]});